import streamlit as st
from PIL import Image, ImageEnhance
import io
import rembg
import cv2
import numpy as np

st.set_page_config(page_title="RemixMyDesign AI", layout="centered")
st.title("🎨 RemixMyDesign - AI pour Designers")

st.markdown("""
Téléverse un design, choisis le niveau de remix, et reçois une nouvelle version en PNG avec fond transparent et qualité améliorée.
""")

uploaded_file = st.file_uploader("📤 Téléverse ton design (PNG ou JPG)", type=["png", "jpg", "jpeg"])
remix_level = st.slider("🎚️ Pourcentage de remix", 10, 100, 30, step=10)

if uploaded_file and st.button("🚀 Générer Remix"):
    st.info("🔄 Remix et amélioration de ton design en cours…")

    # Charger l'image d'origine
    image = Image.open(uploaded_file).convert("RGBA")

    # Supprimer l'arrière-plan avec rembg
    input_bytes = io.BytesIO()
    image.save(input_bytes, format="PNG")
    input_bytes = input_bytes.getvalue()
    output_bytes = rembg.remove(input_bytes)
    transparent_image = Image.open(io.BytesIO(output_bytes)).convert("RGBA")

    # Appliquer un effet de remix simple en fonction du niveau choisi
    enhancer = ImageEnhance.Contrast(transparent_image)
    remixed_image = enhancer.enhance(1 + remix_level / 100)

    # Upscale de l’image en 2x avec OpenCV
    remixed_np = np.array(remixed_image)
    upscaled_np = cv2.resize(remixed_np, (remixed_np.shape[1]*2, remixed_np.shape[0]*2), interpolation=cv2.INTER_CUBIC)
    upscaled_image = Image.fromarray(upscaled_np)

    # Affichage du résultat
    st.image(upscaled_image, caption=f"Remix à {remix_level}% (HD)", use_container_width=True)

    # Téléchargement de l'image finale
    buf = io.BytesIO()
    upscaled_image.save(buf, format="PNG")
    byte_im = buf.getvalue()
    st.download_button(
        label="📥 Télécharger l'image remixée (HD)",
        data=byte_im,
        file_name=f"remix_{remix_level}_percent_hd.png",
        mime="image/png"
    )
else:
    st.warning("🖼️ Téléverse une image pour commencer.")